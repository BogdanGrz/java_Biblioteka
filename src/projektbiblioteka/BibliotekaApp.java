/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package projektbiblioteka;

/**
 *
 * @author B.Grzadzielewski
 */
import model.Czytelnik;
import model.Ksiazka;
import Biblioteka.Biblioteka;
import java.awt.event.KeyEvent;
import java.util.List;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.*;

public class BibliotekaApp extends javax.swing.JFrame {
    
    Biblioteka b = new Biblioteka();
    
    
  
    DefaultTableModel model = new DefaultTableModel(new Object[][] {},
      new Object[] { "ID", "Imie","nazwisko", "pesel" });
    
    
    
    public String[][] ListToArr(List<Czytelnik> czytelnicy) {
        int dl= czytelnicy.size();
        String [][] czyt = new String[dl][4];
        for (int i=0; i<dl; i++)
        {
            czyt[i][0]=Integer.toString(czytelnicy.get(i).getId());
            czyt[i][1]=czytelnicy.get(i).getImie();
            czyt[i][2]=czytelnicy.get(i).getNazwisko();
            czyt[i][3]=czytelnicy.get(i).getPesel();
        }
        return czyt;
    }
    
    
    void SelectCzytelnicyToTable() {
         List<Czytelnik> czytelnicy;
         czytelnicy=b.selectCzytelnicy();
         jTextArea1.setText(czytelnicy.toString());
         //jTable2.getModel().setValueAt("test", 1, 1);
         String [][] czyt = new String[czytelnicy.size()][4];
         czyt = ListToArr(czytelnicy);
         model.setRowCount(0);
         for (int i=0; i<czyt.length; i++)
           model.addRow(czyt[i]);
         for(Czytelnik c: czytelnicy) 
           System.out.println(c);
         System.out.println("----------------------");
    }
    
    
    public BibliotekaApp() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable(model);
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable2.setAutoCreateRowSorter(true);
        jTable2.getColumnModel().getColumn(0).setPreferredWidth(10);
        jTable2.setModel(model);
        jTable2.setCellSelectionEnabled(true);
        jTable2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable2KeyPressed(evt);
            }
        });
        jScrollPane3.setViewportView(jTable2);

        jButton2.setText("jButton2");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 522, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton2)
                            .addComponent(jButton1))))
                .addGap(0, 20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 227, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2)
                .addContainerGap(140, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       
       SelectCzytelnicyToTable();
       
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        b.updateCzytelnikImie("AHMED", 4);
        SelectCzytelnicyToTable();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTable2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable2KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            System.out.println("WYWOLANIE");
                int row = jTable2.getSelectedRow();
                int column = jTable2.getSelectedColumn();

                // resul is the new value to insert in the DB
                String resul = jTable2.getValueAt(row, column).toString();
                // id is the primary key of my DB
                String id = jTable2.getValueAt(row, 0).toString();
                b.updateCzytelnik(id,resul,column);}
    }//GEN-LAST:event_jTable2KeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BibliotekaApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BibliotekaApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BibliotekaApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BibliotekaApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        Biblioteka b = new Biblioteka();
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BibliotekaApp().setVisible(true);
            }
        });
       List<Czytelnik> czytelnicy;
        czytelnicy = b.selectCzytelnicy();
        System.out.println("Wyswietl liste 'czytelnicy'");
         for(Czytelnik c: czytelnicy)
        //    if (c.getImie().equalsIgnoreCase("karol"))    
               System.out.println(c);
         System.out.println("----------------------");
         int rozmiar=czytelnicy.size();
       // for (int i=0; i<rozmiar; i++)
           //czytelnicy.remove(0);
        
         for(Czytelnik c: czytelnicy)
        //    if (c.getImie().equalsIgnoreCase("karol"))    
               System.out.println(c);
         
          System.out.println("----------------------");
                  
        
        
        List<Ksiazka> ksiazki = b.selectKsiazki();
        System.out.println("----------------------");
        b.CzytelnikImie("Karol", czytelnicy);
        System.out.println("----------------------");
        
        //for(Czytelnik c: czytelnicyImie)
        //    if (c.getImie().equalsIgnoreCase("karol"))    
             //  System.out.println(c);

       // System.out.println("Lista książek:");
       // for(Ksiazka k: ksiazki)
         //   System.out.println(k);
        
        
        //System.out.println(czytelnicy.get(0).getImie());
        List<Czytelnik> czytelnicyByName;
        czytelnicyByName=b.selectCzytelnicyByName("Karolina");
        System.out.println("Wyswietl liste 'czytelnicyByName'");
        //for(Czytelnik c: czytelnicyByName)
        //    if (c.getImie().equalsIgnoreCase("karol"))    
              // System.out.println(c);

          String dotebelki = czytelnicy.get(1).getImie();
          System.out.println(dotebelki);
        b.closeConnection(); 
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
